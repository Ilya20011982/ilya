# Поле для игры сапёр представляет собой сетку размером n \times mn×m. В ячейке сетки может находиться или отсутствовать
# мина.
# Напишите программу, которая выводит "решённое" поле, т.е. для каждой ячейки, не являющейся миной, указывается число
# мин, находящихся в соседних ячейках (учитывая диагональные направления)
# Формат ввода:
# На первой строке указываются два натуральных числа 1 \le n,m \le 1001≤n,m≤100, после чего в nn строках
# содержится описание поля в виде последовательности точек '.' и звёздочек '*', где точка означает пустую
# ячейку, а звёздочка − ячейку с миной.
# Формат вывода:
# nn строк поля, в каждой ячейке которого будет либо число от 0 до 8, либо мина (обозначенная символом "*"),
# при этом число означает количество мин в соседних ячейках поля.


def find_mine(x, y):
    summ = 0
    for i in [-1, 0, 1]:
        if field[x - 1][y + i] == "*":
            summ += 1
        if field[x + 1][y + i] == "*":
            summ += 1
    if field[x][y + 1] == "*":
        summ += 1
    if field[x][y - 1] == "*":
        summ += 1
    return summ


n, m = map(int, input().split())
field = [[''] * (m + 2)] + [[''] + input().split() + [''] for x in range(n)] + [[''] * (m + 2)]

for i in range(1, n + 1):
    for j in range(1, m + 1):
        if field[i][j] == '*':
            print(field[i][j], end='')
        else:
            print(find_mine(i, j), end='')
    print()



